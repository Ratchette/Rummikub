
The following methods need to be placed inside a class that records melds (sets or groups)
    
    /**
     * Determine if the tiles form a run
     * @param tiles
     *          The set of tiles that you wish to check
     * @return
     *          true if the tiles form a run </br>
     *          false otherwise
     */
    boolean validateRun(ArrayList<Tile> tiles){
        Tile currentTile;
        char runColour;
        int previousNum;
        
        sortByNumber(tiles);
        runColour = tiles.get(0).colour;
        previousNum = tiles.get(0).number;
        
        for(int i=1; i<tiles.size(); i++){
            currentTile = tiles.get(i);
            
            if(currentTile.colour != runColour)
                return false;
            
            if(currentTile.number == previousNum + 1)
                previousNum++;
            else
                return false;
        }
        
        return true;
    }
    
    /**
     * Determine if the tiles form a group
     * @param tiles
     *          The set of tiles that you wish to check
     * @return
     *          true if the tiles form a group </br>
     *          false otherwise
     */
    boolean validateGroup(ArrayList<Tile> tiles){
        Tile currentTile;
        ArrayList<Character> usedColours;
        int groupNumber;
        
        if(tiles.size() > 4)
            return false;
        
        groupNumber = tiles.get(0).number;
        usedColours = new ArrayList<Character>();
        usedColours.add(tiles.get(0).colour);
        
        for(int i=1; i<tiles.size(); i++){
            currentTile = tiles.get(i);
            
            if(currentTile.number != groupNumber)
                return false;
            
            if(usedColours.contains(currentTile.colour))
                return false;
            
            usedColours.add(currentTile.colour);
        }
        
        return true;
    }
    
    /**
     * Check if the set is a group
     * @return
     *          true if the set is a group </br>
     *          false otherwise
     */
    boolean isGroup(){
        return !this.run;
    }
    
    /**
     * Check if the set is a run
     * @return
     *          true if the set is a run </br>
     *          false otherwise
     */
    boolean isRun(){
        return this.run;
    }